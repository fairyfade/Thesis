
<head>
</head>

<!-- Navigation bar start  -->
<nav class="navbar navbar-expand-sm navbar-dark fixed-top" style="background-color: #0F402C;">
  <div class="container-fluid ">
  <a class="navbar-brand " href="#">Space Python</a>
  <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
    <span class="navbar-toggler-icon"></span>
  </button>
  <div class="collapse navbar-collapse justify-content-end" id="navbarSupportedContent">
    <ul class="navbar-nav ">
    <li class="nav-item">
      <a class="nav-link" aria-current="page" href="/student_dashboard">Student Dashboard</a>
    </li>
    <li class="nav-item">
      <a class="nav-link" href="/my_progress">Progress</a>
    </li>		
    <li class="nav-item">
      <a class="nav-link" href="/my_profile">Student Profile</a>
    </li>		

    </ul>		  
  </div>
  </div>
</nav>
<!-- Navigation bar end  -->

<body>
  <br>
  <br>
  <br>
  <div id="unitData" data-unit="<%=unitInfo%>"></div>
  <div class="codingJourneyGraphic"></div> <!--Leaving space (lol) for interactive graphic that shows where they are along their coding journey-->
  <div class="challengeName">
    <h3 id="challengeName">Challenge Name</h3>
  </div>
  <div class="instructions">
    <p id="instructions">instructions</p>
  </div>
  <div class="challenegeVid">
    
    <iframe id="challengeVid" width="100%" height="356"></iframe>
  </div>
  <div class="textEd">
    
    <iframe src="https://trinket.io/embed/python/e8b4e7e5f9" id="trinket_url" width="100%" height="356" frameborder="0" marginwidth="0" marginheight="0" allowfullscreen></iframe>
  </div>
  <div class="continueButton">
    <a id=continueLink><button id="continueButton" style="float: right;">Continue</button></a> <!--Will need to work out exactly how I am continuing the unit-->
  </div>



  <script type="text/javascript">

    // adapted from @Npitcher12 & @ascemek: Script to populate plant information

      const unitData = $("#unitData").data("unit");
      $("#challengeName").text(unitData.topic);
      $("#instructions").text(unitData.instructions);
      $("#challengeVid").attr("src", unitData.url);
      $("trinket_url").attr("src", unitData.trinket_url);

   //   $("#introductionHeader").text(unitData.introHeader);
  //    $("#unitIntroText").text(unitData.introduction_text);
   //   $("#lessonInformation").text(unitData.lesson_journey);

   //   lessonLink ="/unit/challenge/" + unitData.unit_number 
      castUnitNum = parseInt(unitData.unit_number);
      castTotalNum = parseInt(unitData.total_units);
      if(castUnitNum < castTotalNum){
        unitInt = castUnitNum + 1;
        unitNum = unitInt.toString();
        lessonLink = "/unit/overview/" + unitNum;
      }
      else{
        lessonLink = "/startCoding"; //maybe change this to the unit progress page? 
      }
   //   $("#continueLink").attr("href", lessonLink);

    $("#continueButton").on("click", () => { 
      $.ajax({ // update student progress
          type: 'GET', 
          url: "/updateStudentProgress",
          dataType: 'json',
          contentType: 'json',
          data: {
                 unit_number: unitData.unit_number,
                 lesson_number: '0',
                 sublesson_number: '0',
                 activity_number: '0',
                 type_curriculum: "Unit Challenge",
                 topic: unitData.topic,
                 grade: '100'}, // Use the username and password
          async: false, // Make the request synchronous
          success: (data) => { // If the request is successful
              if (data.error) { // If there is an error
                Swal.fire({ // Show an error message
                  icon: 'error',
                  text: data.error
                })
              } else { // If there is no error
                Swal.fire({
                title: 'Congratulations',
                text: 'You have completed the challenge. : )',
                icon: 'success',
                confirmButtonText: 'Continue'
           }).then(function() {
            window.location.href = lessonLink;
          })
           console.log(data);
              }
          },
          error: (err) => { // If the request fails
            Swal.fire({ // Show an error message
              icon: 'error',
              title: 'Oops...',
              text: 'Something went wrong!'
            })
          }
      });

    })
  </script>

  <br>
  <br>
  <br>
  <br>
</body>

<style>
    body {
    font-family: Verdana, sans-serif;
    background-color: #FAF9F6;
  }
  h2{
color: #024b0c;
}
  button{
background-color: #4895ef;
border-color: #4895ef;
color: white;
border-radius: 8px;
}
</style>
